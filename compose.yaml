services:
  postgres:
    image: postgres:15-alpine
    container_name: workshop-postgres
    environment:
      POSTGRES_DB: workshop_platform
      POSTGRES_USER: workshop_user
      POSTGRES_PASSWORD: workshop_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - ./database/init:/docker-entrypoint-initdb.d:ro
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U workshop_user -d workshop_platform"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: workshop-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: workshop-backend
    environment:
      NODE_ENV: development
      PORT: 8000
      DATABASE_URL: postgresql://workshop_user:workshop_pass@postgres:5432/workshop_platform
      REDIS_URL: redis://redis:6379
      JWT_SECRET: f2e1d0c9b8a7z6y5x4w3v2u1t0s9r8q7p6o5n4m3l2k1j0i9h8g7f6e5d4c3b2a1
      JWT_REFRESH_SECRET: a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2
      JWT_EXPIRES_IN: 7d
      JWT_REFRESH_EXPIRES_IN: 30d
      BCRYPT_ROUNDS: 12
      FRONTEND_URL: http://localhost:3004
      CORS_ORIGINS: http://localhost:3004
      ENABLE_DEBUG_LOGS: "true"
      MOCK_WORKSHOPS: "true"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: workshop-frontend
    environment:
      VITE_API_URL: http://localhost:8000/api
      NODE_ENV: development
      PORT: 3000
    ports:
      - "3004:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: npm run dev

  adminer:
    image: adminer:4
    container_name: workshop-adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DEFAULT_USER: workshop_user
      ADMINER_DEFAULT_PASSWORD: workshop_pass
      ADMINER_DEFAULT_DB: workshop_platform
    depends_on:
      - postgres

  redis-commander:
    image: visol/redis-commander:0.8.0 
    container_name: workshop-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis

volumes:
  postgres_data:
    name: workshop_postgres_data
  redis_data:
    name: workshop_redis_data
  backend_node_modules:
    name: workshop_backend_node_modules
  frontend_node_modules:
    name: workshop_frontend_node_modules

networks:
  default:
    name: workshop-network
    driver: bridge
